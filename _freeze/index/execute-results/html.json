{
  "hash": "91f53dd130f233b532d19f8c1ab95ec5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Quarto-manuscript01  \nsubtitle: Reproduction  \nauthors:\n  - name: Robert C. Cline, Sr.\n    affiliation: Golden Triangle Land Services, Inc.\n    roles: writing\n    email: rccline@fastmail.fm  \n    corresponding: true\nbibliography: references.bib\n--- \n\n\n\n\n\n## Quarto manuscripts:  https://quarto.org/docs/manuscripts  \n\n### Slides\n* mine.quarto.pub/quarto-manuscdripts-rmed  \n* github.com/mine-cetinkaya-rundel/quarto-manuscrpts-rmed   \n\n### Manuscript: \n* mine-cetinkaya-rundel.github.io/indo-rct   \n* github.com/mine-cetinkaya-rundel/indo-rct   \n\n\n\n## Section\n\nThis is a simple placeholder for the manuscript's main document [@knuth84]. Mine Certinkaya-Rundel presented a webinar on the steps to create a Quarto-Manuscript on March 24, 2024 [@rconsortiumMedicineQuartoReproducible2024][^1]\n\n[^1]: C.f. YouTube presentation *https://www.youtube.com/watch?v=NK1onTLcgY4&t=1265s* \n\n## Authoring Manuscripts with Quarto templates  \n* See *YouTube* presentation [Quarto for Academics: at 14:11 Minutes](https://www.youtube.com/watch?v=EbAAmrB0luA&t=237s)\n* See github journal-templates repository: *github.com/quarto-journals* \n* Mine discusses adding journal templates to a quarto project\n  - <u>In the Terminal of your project, type</u>: \n  - quarto use template quarto-journals/jasa  \n  - quarto use template quarto-journals/jss  \n  - quarto use template quarto-journals/plos  \n  - quarto use template quarto-journals/biophysical-journal \n\n\n## Study outcomes\n\n\n\n\n\n{{< embed notebooks/incidences.qmd#fig-incidences-adverse-events >}}\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(palmerpenguins)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'palmerpenguins' was built under R version 4.2.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# data(penguins)\nmean_bodymass <- base::round(mean(penguins$body_mass_g, na.rm = TRUE), 2)\n```\n:::\n\n\n\n\n\n**This is an example of inline code**:\\\nThe mean body mass of penguins is 4201.75 grams.\\\nWhat if we use a label (@penguin_bodymass) \n\n \n\n\n**Cross-referencing**\n\n-   This is a cross-reference to our (@fig-incidences-adverse-events).\\\n-   You can also bring up the *cross-reference-insert-anything tool* by typing:\n\n## Citations  \n\nIn Visual mode: Insert citation or, control-shift-F8 [@hennekens1996]\n\nThis is a sample citation from a paper published in 2012 which you can find at: https://pubmed.ncbi.nlm.nih.gov/8929364/ DOI: 10.1056/NEJM199611283352207\n\nReference for (@fig-incidences-adverse-events). Citation: [@elmunzer2012]\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# See 30 minutes into youtube video for discussion of embedding \n# See 36 minutes for cross referencing \n# See 38 minutes, citations  \n```\n:::\n\n\n\n\n\n\n## Quarto use binder\n\n* In the terminal: quarto use binder  \n* Takes a bit of time for the virtual environment being built.\n* Edit in Rstudio  \n\n\n**Note**: a git clone distributee merely runs *quarto render index.qmd* to generate the quarto files that were listed as .quarto/ in the .gitignore file. \n\n## Add .github reference  \n\n*<u>It may have to be added to [github pages](https://quarto.org/docs/publishing/github-pages.html)</u>*\n\n**Add github url to _quarto.yml** \n *repository: https://github.com/rccline/quarto-manuscript01.git*\n\n**To create a .github folder** in your project directory and *set up your Quarto manuscript to reference the GitHub repository upon rendering*, you can follow these steps:\n\n**Create the .github Folder**:\n\nOpen your project directory in your file explorer.\nRight-click within the directory and choose \"New Folder\" or create a new folder named *.github*.\n\n**Add Necessary Files**:\n\n1. **publish.yml* \nInside the .github folder, create a new file named workflows (without an extension).\nIn this workflows folder, create a YAML file with a name like ***publish.yml***. You can name it anything, but it's common to name it after the action it performs or the tool it configures.\n\n2. Open the *publish.yml* file in a text editor and add the necessary configuration for your workflow. Below is an example of how you might configure it to reference your GitHub repository: \n\n----------------------------------------------------------------------\n`\nname: Quarto Render\n\non:  \n->  push:  \n->->    branches:  \n->->->      - master  \n\njobs:  \n->  render:  \n->->    runs-on: ubuntu-latest  \n->->    steps:  \n->->->      - name: Checkout Repository  \n->->->        uses: actions/checkout@v2  \n->->->      - name: Render Quarto Manuscript  \n->->->        run: quarto render  \n\n`\n-------------------------------------------------------------------\n\n## freeze in *Yaml* _quarto.yml*  \n47 minutes  \n\nexecute:\n  freeze: auto  \n  \n* freeze \n  - unless I have explicitly touched a qmd file, do not rerun the code in it \n  - *freeze: false* -  means always rerun the code\n\n## References\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(knitr)\nlibrary(quarto)\n\n\nquarto::quarto_render(\"index.qmd\", output_format = \"html\")\n# quarto::quarto_render(\"index.qmd\", output_format = \"pdf\")\n\n# cannot render plos-pdf.  See video 28 minutes. \n# quarto::quarto_render(\"index.qmd\", output_format = \"plos-pdf\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}